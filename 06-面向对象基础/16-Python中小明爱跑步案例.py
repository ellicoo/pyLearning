'''
需求：小明体重75.0公斤，小明每次跑步会减掉0.1公斤，小明每次吃东西体重增加0.2公斤

思路分析：
① 找对象 => 小明（事物）
② 找对象属性与方法 => 属性：名字，体重  方法：run跑步方法，eat吃东西方法
③ 让对象调用对应的方法 => 让小明对象调用run和eat方法实现相关操作

注意事项：0.1/0.2/0.3等等在计算机中底层都是通过二进制方式进行保存的，正常情况，每一个数字都可以正好被某个二进制所保存。但是其实有些数字比较特殊，当
使用二进制对其进行保存时，无法保存，会导致在转换过程中，出现很多小数，比如.10000000000001这样一个效果，又由于计算机中，针对float类型，有最大长度限制，
这样就会导致有些小数在转换为二进制的时候无法转换成功，导致出现了多余的小数。我们在实际工作中，可以考虑进行类型转换，保留固定小数即可。
'''
# 1、定义一个学生类
class Student(object):
    # 2、定义成员属性
    def __init__(self, name, weight):
        self.name = name
        self.weight = weight
    # 3、定义成员方法
    def run(self):
         self.weight -= 0.1

    def eat(self):
        self.weight += 0.2

    def __str__(self):
        return f"{self.name}目前体重为{self.weight:.1f}公斤!"
# 4、实例化对象
s1 = Student('小明', 75.0)
# 5、让对象调用相关方法实现业务场景
s1.run()
print(s1)
s1.eat()
print(s1)
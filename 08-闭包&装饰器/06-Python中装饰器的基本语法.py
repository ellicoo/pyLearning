'''
装饰器的作用：简单来说就是针对已有函数，在不改变函数源代码、调用方式的前提下，为其增加额外的功能。
基本语法:
封装一个闭包函数 => 装饰器
@装饰器名称
def func():
    ...

案例：为comment评论函数，增加一个登录验证功能；要求不能改变原有函数的源代码
'''


# 定义一个装饰器 => 本质 => 闭包 => ① 有嵌套 ② 有引用 ③ 有返回
# 注意：装饰器必须有一个参数，参数代表要修饰的函数名称（函数在内存中的地址）
def check(fn):
    def inner():
        # 添加登录验证代码
        print('请先登录')
        # 引用外部的局部变量
        fn()

    return inner


# 为现有函数添加装饰器 => 增加一个额外的功能
@check
def comment():
    print('发布评论')


# 调用源函数
comment()
